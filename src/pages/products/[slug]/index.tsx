import {
  Button,
  Card,
  CardActions,
  CardContent,
  CardHeader,
  CardMedia,
  Typography,
} from "@material-ui/core";
import { GetStaticPaths, GetStaticProps, NextPage } from "next";
import { useRouter } from "next/dist/client/router";
import Head from "next/head";
import Link from "next/link";
import { Product } from "../../../model";

interface ProductDetailPageProps {
  product: Product;
}

const ProductDetailPage: NextPage<ProductDetailPageProps> = ({ product }) => {
  const router = useRouter();

  if (router.isFallback) {
    return <div>Carregando...</div>;
  }

  return (
    <div>
      <Head>
        <title>{product.name} - Detalhes do produto</title>
        {/* <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" /> */}
      </Head>
      <Card key={product.slug}>
        <CardHeader
          title={product.name.toLocaleUpperCase()}
          subheader={`R$ ${product.price}`}
        />
        <CardActions>
          <Link
            href="/products/[slug]/order"
            as={`/products/${product.slug}/order`}
            passHref
          >
            <Button size="small" color="primary" component="a">
              Comprar
            </Button>
          </Link>
        </CardActions>
        <CardMedia style={{ paddingTop: "56%" }} image={product.image_url} />
        <CardContent>
          <Typography variant="body2" color="textSecondary" component="p">
            {product.description}
          </Typography>
        </CardContent>
      </Card>
    </div>
  );
};

export const getStaticProps: GetStaticProps<
  ProductDetailPageProps,
  { slug: string }
> = async (context) => {
  const { slug } = context.params!;

  try {
    const res = await fetch(`http://app:3000/api/products/${slug}`);
    if (res.status === 404) {
      throw res;
    }

    const data = await res.json();

    return { props: { product: data }, revalidate: 1 * 60 * 2 };
  } catch (error) {
    if (error.status === 404) {
      return { notFound: true };
    }

    throw error;
  }
};

export const getStaticPaths: GetStaticPaths = async () => {
  const res = await fetch(`http://app:3000/api/products`);
  const data: Product[] = await res.json();

  const paths = data.map((product) => ({
    params: { slug: product.slug },
  }));

  return { paths, fallback: "blocking" };
};

export default ProductDetailPage;
